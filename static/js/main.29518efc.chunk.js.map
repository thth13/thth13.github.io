{"version":3,"sources":["actions/types.js","reducers/customer.js","reducers/applicant.js","reducers/index.js","reducers/application.js","store.js","components/common/SaveApplication.jsx","actions/application.js","components/applicants/applicant-list/ApplicantItem.jsx","actions/applicant.js","components/applicants/applicant-list/ApplicantsList.jsx","components/applicants/AddApplicant.jsx","components/applicants/ApplicantsPanel.jsx","components/customer/CustomerInfo.jsx","components/customer/CustomerSelect.jsx","actions/customer.js","components/customer/CustomerPanel.jsx","components/application-info/ApplicationInfo.jsx","App.jsx","index.js"],"names":["SET_DEFAULT_CUSTOMERS","FILTER_CUSTOMERS","CLEAR_FILTER_CUSTOMERS","SET_CUSTOMER","CLEAR_CUSTOMER","SET_APPLICANTS","ADD_APPLICANT","DELETE_APPLICANT","CLEAR_APPLICANTS","CREATE_APPLICATION","initialState","defaultCustomers","customers","customer","applicants","newApplicants","combineReducers","state","action","type","payload","find","item","id","applicant","filter","application","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","useStyles","makeStyles","theme","button","marginTop","display","connect","createApplication","dispatch","getState","data","clientId","applicantsIds","map","classes","Button","onClick","className","color","variant","typography","marginRight","checkbox","paddingLeft","applicantItem","alignItems","breakpoints","down","flexDirection","deleteApplicant","useState","checked","setChecked","Checkbox","onChange","e","target","name","Typography","address","IconButton","formTitle","opacity","fontWeight","textField","width","marginBottom","textFieldGroup","justifyContent","radioGroup","countries","maxWidth","addButton","margin","addApplicant","setIsFormOpened","personType","setPersonType","country","setCountry","edrpou","originalName","originalAddress","fields","setFields","changeFieldValue","value","onSubmit","preventDefault","Date","now","RadioGroup","aria-label","FormControlLabel","control","Radio","label","Autocomplete","options","renderInput","params","TextField","root","padding","Applicants","isFormOpened","Paper","elevation","prevState","CustomerInfo","contactPerson","phone","autocomplete","getDefaultCustomers","axios","get","then","res","items","catch","err","console","log","clearFilterCustomers","setCustomer","filterCustomers","searchName","removeCustomer","getApplicants","customerId","inputValue","setInputValue","selected","setSelected","useEffect","getOptionLabel","getOptionSelected","onInputChange","length","App","ApplicantsPanel","ApplicationInfo","defaults","headers","common","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29518efc.chunk.js","sourcesContent":["export const SET_DEFAULT_CUSTOMERS = 'SET_DEFAULT_CUSTOMERS';\r\nexport const FILTER_CUSTOMERS = 'FILTER_CUSTOMERS';\r\nexport const CLEAR_FILTER_CUSTOMERS = 'CLEAR_FILTER_CUSTOMERS';\r\nexport const SET_CUSTOMER = 'SET_CUSTOMER';\r\nexport const CLEAR_CUSTOMER = 'CLEAR_CUSTOMER';\r\nexport const SET_APPLICANTS = 'SET_APPLICANTS';\r\nexport const ADD_APPLICANT = 'ADD_APPLICANT';\r\nexport const DELETE_APPLICANT = ' DELETE_APPLICANT';\r\nexport const CLEAR_APPLICANTS = ' CLEAR_APPLICANTS';\r\nexport const CREATE_APPLICATION = 'CREATE_APPLICATION';\r\n","import {\r\n  SET_DEFAULT_CUSTOMERS,\r\n  FILTER_CUSTOMERS,\r\n  CLEAR_CUSTOMER,\r\n  CLEAR_FILTER_CUSTOMERS,\r\n  SET_CUSTOMER,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  defaultCustomers: [],\r\n  customers: [],\r\n  customer: null,\r\n};\r\n\r\nexport default function customer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_DEFAULT_CUSTOMERS:\r\n      return {\r\n        ...state,\r\n        defaultCustomers: payload,\r\n        customers: payload,\r\n      };\r\n    case FILTER_CUSTOMERS:\r\n      return {\r\n        ...state,\r\n        customers: payload,\r\n      };\r\n    case CLEAR_FILTER_CUSTOMERS:\r\n      return {\r\n        ...state,\r\n        customers: state.defaultCustomers,\r\n      };\r\n    case SET_CUSTOMER:\r\n      return {\r\n        ...state,\r\n        customer: state.defaultCustomers.find((item) => item.id === payload),\r\n      };\r\n    case CLEAR_CUSTOMER:\r\n      return {\r\n        ...state,\r\n        customer: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SET_APPLICANTS,\r\n  ADD_APPLICANT,\r\n  DELETE_APPLICANT,\r\n  CLEAR_APPLICANTS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  applicants: [],\r\n  newApplicants: [],\r\n};\r\n\r\nexport default function applicant(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_APPLICANTS:\r\n      return {\r\n        ...state,\r\n        applicants: payload,\r\n      };\r\n    case ADD_APPLICANT: {\r\n      return {\r\n        applicants: [...state.applicants, payload],\r\n        newApplicants: [...state.newApplicants, payload],\r\n      };\r\n    }\r\n    case DELETE_APPLICANT: {\r\n      return {\r\n        applicants: state.applicants.filter(\r\n          (applicant) => applicant.id !== payload\r\n        ),\r\n        newApplicants: state.newApplicants.filter(\r\n          (applicant) => applicant.id !== payload\r\n        ),\r\n      };\r\n    }\r\n    case CLEAR_APPLICANTS: {\r\n      return {\r\n        applicants: [],\r\n        newApplicants: [],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport customer from './customer';\r\nimport applicant from './applicant';\r\nimport application from './application';\r\n\r\nexport default combineReducers({\r\n  customer,\r\n  applicant,\r\n  application,\r\n});\r\n","import { CREATE_APPLICATION } from '../actions/types';\r\n\r\nconst initialState = null;\r\n\r\nexport default function application(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case CREATE_APPLICATION: {\r\n      return payload;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { createApplication } from '../../actions/application';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginTop: 15,\r\n    display: 'block',\r\n  },\r\n}));\r\n\r\nconst SaveApplication = ({ createApplication }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleClick = () => {\r\n    createApplication();\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      onClick={handleClick}\r\n      className={classes.button}\r\n      color=\"primary\"\r\n      variant=\"contained\"\r\n    >\r\n      Зберегти заявку\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default connect(null, { createApplication })(SaveApplication);\r\n","import { CREATE_APPLICATION } from './types';\r\n\r\nexport const createApplication = () => (dispatch, getState) => {\r\n  const { customer, applicant } = getState();\r\n\r\n  const data = {\r\n    clientId: customer.customer && customer.customer.id,\r\n    applicantsIds: applicant.applicants.map((item) => item.id),\r\n    newApplicants: applicant.newApplicants,\r\n  };\r\n\r\n  dispatch({\r\n    type: CREATE_APPLICATION,\r\n    payload: data,\r\n  });\r\n};\r\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteApplicant } from '../../../actions/applicant';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Typography } from '@material-ui/core';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    marginRight: 5,\r\n  },\r\n  checkbox: {\r\n    paddingLeft: 0,\r\n  },\r\n  applicantItem: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  [theme.breakpoints.down('xs')]: {\r\n    applicantItem: {\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n}));\r\n\r\nconst ApplicantItem = ({ applicant, deleteApplicant }) => {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState(true);\r\n\r\n  const handleChange = (e) => {\r\n    setChecked(e.target.checked);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    deleteApplicant(applicant.id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.applicantItem}>\r\n      <Checkbox\r\n        checked={checked}\r\n        onChange={handleChange}\r\n        name={applicant.name}\r\n        className={classes.checkbox}\r\n        color=\"primary\"\r\n      />\r\n      <Typography className={classes.typography}>{applicant.name}</Typography>\r\n      <Typography className={classes.typography}>\r\n        {applicant.address.address}\r\n      </Typography>\r\n      <IconButton onClick={handleDelete}>\r\n        <HighlightOffIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { deleteApplicant })(ApplicantItem);\r\n","import axios from 'axios';\r\nimport { SET_APPLICANTS, ADD_APPLICANT, DELETE_APPLICANT } from './types';\r\n\r\nexport const getApplicants = (customerId) => (dispatch) => {\r\n  axios\r\n    .get(`https://lexberry.com.ua/api/v1/applicants`, {\r\n      params: { 'filter[client:id]': customerId },\r\n    })\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SET_APPLICANTS,\r\n        payload: res.data.items,\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const addApplicant = (applicant) => (dispatch) => {\r\n  dispatch({\r\n    type: ADD_APPLICANT,\r\n    payload: applicant,\r\n  });\r\n};\r\n\r\nexport const deleteApplicant = (id) => (dispatch) => {\r\n  dispatch({\r\n    type: DELETE_APPLICANT,\r\n    payload: id,\r\n  });\r\n};\r\n","import { connect } from 'react-redux';\r\nimport ApplicantItem from './ApplicantItem';\r\n\r\nconst ApplicantsList = ({ applicants }) => {\r\n  return (\r\n    <>\r\n      {applicants.map((applicant) => (\r\n        <ApplicantItem key={applicant.id} applicant={applicant} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  applicants: state.applicant.applicants,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ApplicantsList);\r\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addApplicant } from '../../actions/applicant';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  formTitle: {\r\n    opacity: '50%',\r\n    fontWeight: 'bolder',\r\n  },\r\n  textField: {\r\n    width: '48%',\r\n    marginBottom: 10,\r\n  },\r\n  textFieldGroup: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  radioGroup: {\r\n    marginBottom: 10,\r\n  },\r\n  countries: {\r\n    maxWidth: 300,\r\n    marginBottom: 10,\r\n  },\r\n  addButton: {\r\n    margin: '10px 0',\r\n  },\r\n}));\r\n\r\nconst countries = ['Ukraine', 'Russia', 'Germany', 'Japan'];\r\n\r\nconst AddApplicant = ({ addApplicant, setIsFormOpened }) => {\r\n  const classes = useStyles();\r\n  const [personType, setPersonType] = useState('individual');\r\n  const [country, setCountry] = useState(countries[0]);\r\n  const [fields, setFields] = useState({\r\n    edrpou: '',\r\n    name: '',\r\n    address: '',\r\n    originalName: '',\r\n    originalAddress: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setPersonType(e.target.value);\r\n  };\r\n\r\n  const changeCountry = (e, customer) => {\r\n    setCountry(customer);\r\n  };\r\n\r\n  const changeFieldValue = (e) => {\r\n    setFields((fields) => {\r\n      return { ...fields, [e.target.name]: e.target.value };\r\n    });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addApplicant({\r\n      ...fields,\r\n      id: Date.now(),\r\n      personType,\r\n      address: {\r\n        country,\r\n        address: fields.address,\r\n      },\r\n    });\r\n\r\n    setIsFormOpened(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Typography className={classes.formTitle}>Додати нового</Typography>\r\n      <RadioGroup\r\n        aria-label=\"personType\"\r\n        name=\"personType\"\r\n        value={personType}\r\n        onChange={handleChange}\r\n        className={classes.radioGroup}\r\n      >\r\n        <FormControlLabel\r\n          value=\"individual\"\r\n          control={<Radio />}\r\n          label=\"Фiзична особа\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"entity\"\r\n          control={<Radio />}\r\n          label=\"Юридична особа\"\r\n        />\r\n      </RadioGroup>\r\n      <Autocomplete\r\n        value={country}\r\n        onChange={changeCountry}\r\n        options={countries}\r\n        className={classes.countries}\r\n        renderInput={(params) => <TextField {...params} label=\"Краiна\" />}\r\n      />\r\n      <TextField\r\n        value={fields.edrpou}\r\n        onChange={changeFieldValue}\r\n        name=\"edrpou\"\r\n        className={classes.textField}\r\n        label=\"ЭДРПОУ\"\r\n      />\r\n      <div className={classes.textFieldGroup}>\r\n        <TextField\r\n          name=\"name\"\r\n          value={fields.name}\r\n          onChange={changeFieldValue}\r\n          className={classes.textField}\r\n          label=\"Назва\"\r\n        />\r\n        {country && country !== 'Ukraine' && (\r\n          <TextField\r\n            name=\"originalName\"\r\n            value={fields.originalName}\r\n            onChange={changeFieldValue}\r\n            className={classes.textField}\r\n            label=\"Назва мовою походження\"\r\n          />\r\n        )}\r\n      </div>\r\n      <div className={classes.textFieldGroup}>\r\n        <TextField\r\n          name=\"address\"\r\n          value={fields.address}\r\n          onChange={changeFieldValue}\r\n          className={classes.textField}\r\n          label=\"Адреса\"\r\n        />\r\n        {country && country !== 'Ukraine' && (\r\n          <TextField\r\n            name=\"originalAddress\"\r\n            value={fields.originalAddress}\r\n            onChange={changeFieldValue}\r\n            className={classes.textField}\r\n            label=\"Адреса мовою походження\"\r\n          />\r\n        )}\r\n      </div>\r\n      <Button\r\n        type=\"submit\"\r\n        className={classes.addButton}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n      >\r\n        Додати\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default connect(null, { addApplicant })(AddApplicant);\r\n","import { useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveApplication from '../common/SaveApplication';\r\nimport ApplicantsList from './applicant-list/ApplicantsList';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddApplicant from './AddApplicant';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    marginBottom: '25px',\r\n    padding: '20px 25px',\r\n  },\r\n  name: {\r\n    fontWeight: 'bolder',\r\n  },\r\n  addButton: {\r\n    margin: '15px 0',\r\n  },\r\n}));\r\n\r\nconst Applicants = () => {\r\n  const classes = useStyles();\r\n  const [isFormOpened, setIsFormOpened] = useState(false);\r\n\r\n  const formOpen = () => {\r\n    setIsFormOpened((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root} elevation={0}>\r\n      <Typography variant=\"h5\">Заявники</Typography>\r\n      <ApplicantsList />\r\n      <Button\r\n        className={classes.addButton}\r\n        onClick={formOpen}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n      >\r\n        Додати <AddIcon />\r\n      </Button>\r\n      {isFormOpened && <AddApplicant setIsFormOpened={setIsFormOpened} />}\r\n      <SaveApplication />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Applicants;\r\n","import Typography from '@material-ui/core/Typography';\r\n\r\nconst CustomerInfo = ({ customer: { name, contactPerson, phone } }) => (\r\n  <>\r\n    <Typography variant=\"h6\">{name}</Typography>\r\n    <Typography>{contactPerson}</Typography>\r\n    <Typography>тел. {phone}</Typography>\r\n  </>\r\n);\r\n\r\nexport default CustomerInfo;\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n  getDefaultCustomers,\r\n  clearFilterCustomers,\r\n  setCustomer,\r\n  filterCustomers,\r\n  removeCustomer,\r\n} from '../../actions/customer';\r\nimport { getApplicants } from '../../actions/applicant';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  autocomplete: {\r\n    maxWidth: 300,\r\n    marginBottom: 15,\r\n  },\r\n}));\r\n\r\nconst CustomerSelect = ({\r\n  customers,\r\n  getDefaultCustomers,\r\n  clearFilterCustomers,\r\n  setCustomer,\r\n  filterCustomers,\r\n  removeCustomer,\r\n  getApplicants,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const onChange = (e, value) => {\r\n    setInputValue((prevState) => {\r\n      // Сбрасываем фильтр, если длина текста в инпуте опять меньше 3\r\n      if (\r\n        (prevState && prevState.length >= 3 && value.length < 3) ||\r\n        value.length < 3\r\n      ) {\r\n        clearFilterCustomers();\r\n      } else if (value.length >= 3) {\r\n        // Если длина инпута больше 3, делаем фильтр\r\n        filterCustomers(value);\r\n      }\r\n      setInputValue(value);\r\n    });\r\n  };\r\n\r\n  const changeCustomer = (e, customer) => {\r\n    setSelected(customer);\r\n\r\n    if (customer) {\r\n      setCustomer(customer.id);\r\n      getApplicants(customer.id);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!selected) {\r\n      removeCustomer();\r\n    }\r\n  }, [selected, removeCustomer]);\r\n\r\n  useEffect(() => {\r\n    getDefaultCustomers();\r\n  }, [getDefaultCustomers]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      className={classes.autocomplete}\r\n      value={selected}\r\n      onChange={changeCustomer}\r\n      options={customers}\r\n      getOptionLabel={(customer) => customer.label}\r\n      getOptionSelected={(customer) => customer.label === selected.label}\r\n      inputValue={inputValue}\r\n      onInputChange={onChange}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Customer Search / Selection\"\r\n          margin=\"normal\"\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  customer: state.customer.customer,\r\n  customers: state.customer.customers,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getDefaultCustomers,\r\n  clearFilterCustomers,\r\n  setCustomer,\r\n  filterCustomers,\r\n  removeCustomer,\r\n  getApplicants,\r\n})(CustomerSelect);\r\n","import axios from 'axios';\r\nimport {\r\n  SET_DEFAULT_CUSTOMERS,\r\n  FILTER_CUSTOMERS,\r\n  CLEAR_CUSTOMER,\r\n  CLEAR_FILTER_CUSTOMERS,\r\n  SET_CUSTOMER,\r\n  CLEAR_APPLICANTS,\r\n} from './types';\r\n\r\nexport const getDefaultCustomers = () => (dispatch) => {\r\n  axios\r\n    .get('https://lexberry.com.ua/api/v1/clients')\r\n    .then((res) => {\r\n      // Если элементов нет, приходит res.data.message\r\n      // с сообщением что нет элементов. Поэтому делаем проверку что пришли items\r\n      if (res.data.items) {\r\n        dispatch({\r\n          type: SET_DEFAULT_CUSTOMERS,\r\n          payload: res.data.items,\r\n        });\r\n      }\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const filterCustomers = (searchName) => (dispatch) => {\r\n  axios\r\n    .get(`https://lexberry.com.ua/api/v1/clients`, {\r\n      params: { 'search[name]': searchName },\r\n    })\r\n    .then((res) => {\r\n      if (res.data.items) {\r\n        dispatch({\r\n          type: FILTER_CUSTOMERS,\r\n          payload: res.data.items,\r\n        });\r\n      }\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const clearFilterCustomers = () => (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_FILTER_CUSTOMERS,\r\n  });\r\n};\r\n\r\nexport const setCustomer = (id) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_CUSTOMER,\r\n    payload: id,\r\n  });\r\n};\r\n\r\nexport const removeCustomer = () => (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_CUSTOMER,\r\n  });\r\n\r\n  dispatch({\r\n    type: CLEAR_APPLICANTS,\r\n  });\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport SaveApplication from '../common/SaveApplication';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CustomerInfo from './CustomerInfo';\r\nimport CustomerSelect from './CustomerSelect';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    marginBottom: '25px',\r\n    padding: '20px 25px',\r\n  },\r\n}));\r\n\r\nconst CustomerPanel = ({ customer }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root} elevation={0}>\r\n      <Typography variant=\"h5\">Клієнт</Typography>\r\n      <CustomerSelect />\r\n      {customer && <CustomerInfo customer={customer} />}\r\n      <SaveApplication />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  customer: state.customer.customer,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(CustomerPanel);\r\n","import { connect } from 'react-redux';\r\nimport JSONPretty from 'react-json-pretty';\r\n\r\nconst AppllicationInfo = ({ application }) => {\r\n  return application && <JSONPretty data={application} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  application: state.application,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(AppllicationInfo);\r\n","import { Provider } from 'react-redux';\nimport store from './store';\nimport ApplicantsPanel from './components/applicants/ApplicantsPanel';\nimport CustomerPanel from './components/customer/CustomerPanel';\nimport ApplicationInfo from './components/application-info/ApplicationInfo';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <CustomerPanel />\n      <ApplicantsPanel />\n      <ApplicationInfo />\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport './index.css';\nimport App from './App';\n\nconst authToken =\n  'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE2MDc0NjEyMDMsImV4cCI6MTYxMDA1MzIwMywicm9sZXMiOlsiUk9MRV9BRE1JTiJdLCJ1c2VybmFtZSI6ImJ5Lmhhc2tlbGwifQ.F_0yZmAbIbPuonnXiKdxI9ne77y3CCFmoe-Wygp3wIgXShDoO64cnnTBsVQG6u6VUvZt1LrueXhUnbOmVKnbUTckKKkNcQWl6iHVO-9RgP2133SOzWcSmVDpf0BC_K0lczF0DaAmp1gHii-Ct50nORpSONSbWNnjkfhBIPbyLVDR2sKuGKyMGG-6Qy0JRDTFnt5AVO_z5HEpCYSrQdhwd_wl7gcD9-vH7_aQib9dq6htbDdqdFw1NXk84B_YTfa2szSFyMDuQkaTgXZwoOOouxEHy9JlJgkKgxK5W-f84cNFkFrYxUhxaNROgPFY8Cs9pB54NcVaSceQc2vF2lgtFb3VyC-ra3xTNtrNmzGPpikftkeU8lnojP8ifEsdeYWjgJGUa7HsR-VMq2fN9otGd0PqpXLpXPasBXEvub7tRyqLziGUG_h4SdgIOu0aGe3sItigzF3fnaCc-Vv8B1wM_qt05ahCgdMuMD7X2dW0eAFuO8zKZszz7owiD5S92QiJkI2sGUG5YzPTOPjch-Qoax--aM1QE8XFDvkDYCruARDTBxcqNp6QAdEANr_toscUpcwTM5-hNfSTGaWvF0dkJaek2PCCszOWAyz6TiLy9lGXVkFEGn-qeR9V0ecdHNx9F_6YNqgWAIOlMNCsYiNp77J6ggmLjJZfTYDh6BAwFNI';\n\naxios.defaults.headers.common['Authorization'] = authToken;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}