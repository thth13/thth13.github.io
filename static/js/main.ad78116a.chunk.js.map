{"version":3,"sources":["actions/types.js","reducers/customer.js","reducers/applicant.js","reducers/index.js","reducers/application.js","store.js","components/common/SaveApplication.jsx","actions/application.js","components/applicants/applicant-list/ApplicantItem.jsx","actions/applicant.js","components/applicants/applicant-list/ApplicantsList.jsx","components/applicants/AddApplicant.jsx","components/applicants/ApplicantsPanel.jsx","components/customer/CustomerInfo.jsx","components/customer/CustomerSelect.jsx","actions/customer.js","components/customer/CustomerPanel.jsx","components/application-info/ApplicationInfo.jsx","App.jsx","index.js"],"names":["SET_DEFAULT_CUSTOMERS","FILTER_CUSTOMERS","CLEAR_FILTER_CUSTOMERS","SET_CUSTOMER","CLEAR_CUSTOMER","SET_APPLICANTS","ADD_APPLICANT","DELETE_APPLICANT","CLEAR_APPLICANTS","CREATE_APPLICATION","SET_CUSTOMERS_ISLOADING","SET_APPLICANTS_ISLOADING","initialState","defaultCustomers","customers","customer","customersIsLoading","applicants","newApplicants","applicantsIsLoading","combineReducers","state","action","type","payload","find","item","id","applicant","filter","application","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","useStyles","makeStyles","theme","button","marginTop","display","connect","createApplication","dispatch","getState","data","clientId","applicantsIds","map","classes","Button","onClick","className","color","variant","typography","marginRight","typographyName","fontWeight","checkbox","paddingLeft","applicantItem","alignItems","applicantInfoBlock","breakpoints","down","flexDirection","deleteApplicant","useState","checked","setChecked","Checkbox","onChange","e","target","name","Typography","address","IconButton","isLoading","console","log","LinearProgress","formTitle","opacity","textField","width","marginBottom","textFieldGroup","justifyContent","radioGroup","countries","maxWidth","addButton","margin","addApplicant","setIsFormOpened","personType","setPersonType","country","setCountry","edrpou","originalName","originalAddress","fields","setFields","changeFieldValue","value","onSubmit","preventDefault","Date","now","toString","RadioGroup","aria-label","FormControlLabel","control","Radio","label","Autocomplete","options","renderInput","params","TextField","root","padding","Applicants","isFormOpened","Paper","elevation","prevState","CustomerInfo","contactPerson","phone","autocomplete","getDefaultCustomers","axios","get","then","res","items","catch","err","clearFilterCustomers","setCustomer","filterCustomers","searchName","removeCustomer","getApplicants","customerId","inputValue","setInputValue","selected","setSelected","useEffect","loading","getOptionLabel","getOptionSelected","onInputChange","length","App","ApplicantsPanel","ApplicationInfo","defaults","headers","common","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad78116a.chunk.js","sourcesContent":["export const SET_DEFAULT_CUSTOMERS = 'SET_DEFAULT_CUSTOMERS';\r\nexport const FILTER_CUSTOMERS = 'FILTER_CUSTOMERS';\r\nexport const CLEAR_FILTER_CUSTOMERS = 'CLEAR_FILTER_CUSTOMERS';\r\nexport const SET_CUSTOMER = 'SET_CUSTOMER';\r\nexport const CLEAR_CUSTOMER = 'CLEAR_CUSTOMER';\r\nexport const SET_APPLICANTS = 'SET_APPLICANTS';\r\nexport const ADD_APPLICANT = 'ADD_APPLICANT';\r\nexport const DELETE_APPLICANT = ' DELETE_APPLICANT';\r\nexport const CLEAR_APPLICANTS = ' CLEAR_APPLICANTS';\r\nexport const CREATE_APPLICATION = 'CREATE_APPLICATION';\r\nexport const SET_CUSTOMERS_ISLOADING = 'SET_CUSTOMERS_ISLOADING';\r\nexport const SET_APPLICANTS_ISLOADING = 'SET_APPLICANTS_ISLOADING';\r\n","import {\r\n  SET_DEFAULT_CUSTOMERS,\r\n  FILTER_CUSTOMERS,\r\n  CLEAR_CUSTOMER,\r\n  CLEAR_FILTER_CUSTOMERS,\r\n  SET_CUSTOMER,\r\n  SET_CUSTOMERS_ISLOADING,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  defaultCustomers: [],\r\n  customers: [],\r\n  customer: null,\r\n  customersIsLoading: false,\r\n};\r\n\r\nexport default function customer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_DEFAULT_CUSTOMERS:\r\n      return {\r\n        ...state,\r\n        defaultCustomers: payload,\r\n        customers: payload,\r\n        customersIsLoading: false,\r\n      };\r\n    case FILTER_CUSTOMERS:\r\n      return {\r\n        ...state,\r\n        customers: payload,\r\n        customersIsLoading: false,\r\n      };\r\n    case CLEAR_FILTER_CUSTOMERS:\r\n      return {\r\n        ...state,\r\n        customers: state.defaultCustomers,\r\n      };\r\n    case SET_CUSTOMER:\r\n      return {\r\n        ...state,\r\n        customer: state.defaultCustomers.find((item) => item.id === payload),\r\n      };\r\n    case CLEAR_CUSTOMER:\r\n      return {\r\n        ...state,\r\n        customer: null,\r\n      };\r\n    case SET_CUSTOMERS_ISLOADING: {\r\n      return {\r\n        ...state,\r\n        customersIsLoading: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SET_APPLICANTS,\r\n  ADD_APPLICANT,\r\n  DELETE_APPLICANT,\r\n  CLEAR_APPLICANTS,\r\n  SET_APPLICANTS_ISLOADING,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  applicants: [],\r\n  newApplicants: [],\r\n  applicantsIsLoading: false,\r\n};\r\n\r\nexport default function applicant(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_APPLICANTS:\r\n      return {\r\n        ...state,\r\n        applicants: payload,\r\n        applicantsIsLoading: false,\r\n      };\r\n    case ADD_APPLICANT: {\r\n      return {\r\n        ...state,\r\n        applicants: [...state.applicants, payload],\r\n        newApplicants: [...state.newApplicants, payload],\r\n      };\r\n    }\r\n    case DELETE_APPLICANT: {\r\n      return {\r\n        ...state,\r\n        applicants: state.applicants.filter(\r\n          (applicant) => applicant.id !== payload\r\n        ),\r\n        newApplicants: state.newApplicants.filter(\r\n          (applicant) => applicant.id !== payload\r\n        ),\r\n      };\r\n    }\r\n    case CLEAR_APPLICANTS: {\r\n      return {\r\n        ...state,\r\n        applicants: [],\r\n        newApplicants: [],\r\n      };\r\n    }\r\n    case SET_APPLICANTS_ISLOADING: {\r\n      return {\r\n        ...state,\r\n        applicantsIsLoading: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport customer from './customer';\r\nimport applicant from './applicant';\r\nimport application from './application';\r\n\r\nexport default combineReducers({\r\n  customer,\r\n  applicant,\r\n  application,\r\n});\r\n","import { CREATE_APPLICATION } from '../actions/types';\r\n\r\nconst initialState = null;\r\n\r\nexport default function application(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case CREATE_APPLICATION: {\r\n      return payload;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { createApplication } from '../../actions/application';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginTop: 15,\r\n    display: 'block',\r\n  },\r\n}));\r\n\r\nconst SaveApplication = ({ createApplication }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleClick = () => {\r\n    createApplication();\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      onClick={handleClick}\r\n      className={classes.button}\r\n      color=\"primary\"\r\n      variant=\"contained\"\r\n    >\r\n      Зберегти заявку\r\n    </Button>\r\n  );\r\n};\r\n\r\nSaveApplication.propTypes = {\r\n  createApplication: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { createApplication })(SaveApplication);\r\n","import { CREATE_APPLICATION } from './types';\r\n\r\nexport const createApplication = () => (dispatch, getState) => {\r\n  const { customer, applicant } = getState();\r\n\r\n  const data = {\r\n    clientId: customer.customer && customer.customer.id,\r\n    applicantsIds: applicant.applicants.map((item) => item.id),\r\n    newApplicants: applicant.newApplicants,\r\n  };\r\n\r\n  dispatch({\r\n    type: CREATE_APPLICATION,\r\n    payload: data,\r\n  });\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteApplicant } from '../../../actions/applicant';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Typography } from '@material-ui/core';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    marginRight: 5,\r\n  },\r\n  typographyName: {\r\n    fontWeight: 'bolder',\r\n    marginRight: 5,\r\n  },\r\n  checkbox: {\r\n    paddingLeft: 0,\r\n  },\r\n  applicantItem: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  applicantInfoBlock: {\r\n    display: 'flex',\r\n  },\r\n  [theme.breakpoints.down('xs')]: {\r\n    applicantInfoBlock: {\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n}));\r\n\r\nconst ApplicantItem = ({ applicant, deleteApplicant }) => {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState(true);\r\n\r\n  const handleChange = (e) => {\r\n    setChecked(e.target.checked);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    deleteApplicant(applicant.id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.applicantItem}>\r\n      <Checkbox\r\n        checked={checked}\r\n        onChange={handleChange}\r\n        name={applicant.name}\r\n        className={classes.checkbox}\r\n        color=\"primary\"\r\n      />\r\n      <div className={classes.applicantInfoBlock}>\r\n        <Typography className={classes.typographyName}>\r\n          {applicant.name}\r\n        </Typography>\r\n        <Typography className={classes.typography}>\r\n          {applicant.address.address}\r\n        </Typography>\r\n      </div>\r\n      <IconButton onClick={handleDelete}>\r\n        <HighlightOffIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nApplicantItem.propTypes = {\r\n  applicant: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    address: PropTypes.shape({\r\n      address: PropTypes.string,\r\n    }),\r\n    id: PropTypes.string,\r\n  }).isRequired,\r\n  deleteApplicant: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteApplicant })(ApplicantItem);\r\n","import axios from 'axios';\r\nimport {\r\n  SET_APPLICANTS,\r\n  ADD_APPLICANT,\r\n  DELETE_APPLICANT,\r\n  SET_APPLICANTS_ISLOADING,\r\n} from './types';\r\n\r\nexport const getApplicants = (customerId) => (dispatch) => {\r\n  dispatch({ type: SET_APPLICANTS_ISLOADING });\r\n\r\n  axios\r\n    .get(`https://lexberry.com.ua/api/v1/applicants`, {\r\n      params: { 'filter[client:id]': customerId },\r\n    })\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SET_APPLICANTS,\r\n        payload: res.data.items,\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const addApplicant = (applicant) => (dispatch) => {\r\n  dispatch({\r\n    type: ADD_APPLICANT,\r\n    payload: applicant,\r\n  });\r\n};\r\n\r\nexport const deleteApplicant = (id) => (dispatch) => {\r\n  dispatch({\r\n    type: DELETE_APPLICANT,\r\n    payload: id,\r\n  });\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ApplicantItem from './ApplicantItem';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst ApplicantsList = ({ applicants, isLoading }) => {\r\n  console.log(applicants);\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <LinearProgress />\r\n      ) : (\r\n        applicants.map((applicant) => (\r\n          <ApplicantItem key={applicant.id} applicant={applicant} />\r\n        ))\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  applicants: state.applicant.applicants,\r\n  isLoading: state.applicant.applicantsIsLoading,\r\n});\r\n\r\nApplicantsList.propTypes = {\r\n  isLoading: PropTypes.bool.isRequired,\r\n  applicants: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      address: PropTypes.shape({\r\n        address: PropTypes.string,\r\n      }),\r\n      id: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(ApplicantsList);\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addApplicant } from '../../actions/applicant';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  formTitle: {\r\n    opacity: '50%',\r\n    fontWeight: 'bolder',\r\n  },\r\n  textField: {\r\n    width: '48%',\r\n    marginBottom: 10,\r\n  },\r\n  textFieldGroup: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  radioGroup: {\r\n    marginBottom: 10,\r\n  },\r\n  countries: {\r\n    maxWidth: 300,\r\n    marginBottom: 10,\r\n  },\r\n  addButton: {\r\n    margin: '10px 0',\r\n  },\r\n}));\r\n\r\nconst countries = ['Ukraine', 'Russia', 'Germany', 'Japan'];\r\n\r\nconst AddApplicant = ({ addApplicant, setIsFormOpened }) => {\r\n  const classes = useStyles();\r\n  const [personType, setPersonType] = useState('individual');\r\n  const [country, setCountry] = useState(countries[0]);\r\n  const [fields, setFields] = useState({\r\n    edrpou: '',\r\n    name: '',\r\n    address: '',\r\n    originalName: '',\r\n    originalAddress: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setPersonType(e.target.value);\r\n  };\r\n\r\n  const changeCountry = (e, customer) => {\r\n    setCountry(customer);\r\n  };\r\n\r\n  const changeFieldValue = (e) => {\r\n    setFields({ ...fields, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addApplicant({\r\n      ...fields,\r\n      id: Date.now().toString(),\r\n      personType,\r\n      address: {\r\n        country,\r\n        address: fields.address,\r\n      },\r\n    });\r\n\r\n    setIsFormOpened(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Typography className={classes.formTitle}>Додати нового</Typography>\r\n      <RadioGroup\r\n        aria-label=\"personType\"\r\n        name=\"personType\"\r\n        value={personType}\r\n        onChange={handleChange}\r\n        className={classes.radioGroup}\r\n      >\r\n        <FormControlLabel\r\n          value=\"individual\"\r\n          control={<Radio />}\r\n          label=\"Фiзична особа\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"entity\"\r\n          control={<Radio />}\r\n          label=\"Юридична особа\"\r\n        />\r\n      </RadioGroup>\r\n      <Autocomplete\r\n        value={country}\r\n        onChange={changeCountry}\r\n        options={countries}\r\n        className={classes.countries}\r\n        renderInput={(params) => <TextField {...params} label=\"Краiна\" />}\r\n      />\r\n      <TextField\r\n        value={fields.edrpou}\r\n        onChange={changeFieldValue}\r\n        name=\"edrpou\"\r\n        className={classes.textField}\r\n        label=\"ЭДРПОУ\"\r\n      />\r\n      <div className={classes.textFieldGroup}>\r\n        <TextField\r\n          name=\"name\"\r\n          value={fields.name}\r\n          onChange={changeFieldValue}\r\n          className={classes.textField}\r\n          label=\"Назва\"\r\n        />\r\n        {country && country !== 'Ukraine' && (\r\n          <TextField\r\n            name=\"originalName\"\r\n            value={fields.originalName}\r\n            onChange={changeFieldValue}\r\n            className={classes.textField}\r\n            label=\"Назва мовою походження\"\r\n          />\r\n        )}\r\n      </div>\r\n      <div className={classes.textFieldGroup}>\r\n        <TextField\r\n          name=\"address\"\r\n          value={fields.address}\r\n          onChange={changeFieldValue}\r\n          className={classes.textField}\r\n          label=\"Адреса\"\r\n        />\r\n        {country && country !== 'Ukraine' && (\r\n          <TextField\r\n            name=\"originalAddress\"\r\n            value={fields.originalAddress}\r\n            onChange={changeFieldValue}\r\n            className={classes.textField}\r\n            label=\"Адреса мовою походження\"\r\n          />\r\n        )}\r\n      </div>\r\n      <Button\r\n        type=\"submit\"\r\n        className={classes.addButton}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n      >\r\n        Додати\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddApplicant.propTypes = {\r\n  addApplicant: PropTypes.func.isRequired,\r\n  setIsFormOpened: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addApplicant })(AddApplicant);\r\n","import { useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveApplication from '../common/SaveApplication';\r\nimport ApplicantsList from './applicant-list/ApplicantsList';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddApplicant from './AddApplicant';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    marginBottom: '25px',\r\n    padding: '20px 25px',\r\n  },\r\n  name: {\r\n    fontWeight: 'bolder',\r\n  },\r\n  addButton: {\r\n    margin: '15px 0',\r\n  },\r\n}));\r\n\r\nconst Applicants = () => {\r\n  const classes = useStyles();\r\n  const [isFormOpened, setIsFormOpened] = useState(false);\r\n\r\n  const formOpen = () => {\r\n    setIsFormOpened((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root} elevation={0}>\r\n      <Typography variant=\"h5\">Заявники</Typography>\r\n      <ApplicantsList />\r\n      <Button\r\n        className={classes.addButton}\r\n        onClick={formOpen}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n      >\r\n        Додати <AddIcon />\r\n      </Button>\r\n      {isFormOpened && <AddApplicant setIsFormOpened={setIsFormOpened} />}\r\n      <SaveApplication />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Applicants;\r\n","import Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CustomerInfo = ({ customer: { name, contactPerson, phone } }) => (\r\n  <>\r\n    <Typography variant=\"h6\">{name}</Typography>\r\n    <Typography>{contactPerson}</Typography>\r\n    <Typography>тел. {phone}</Typography>\r\n  </>\r\n);\r\n\r\nCustomerInfo.propTypes = {\r\n  customer: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    contactPerson: PropTypes.string,\r\n    phone: PropTypes.string,\r\n  }).isRequired,\r\n};\r\n\r\nexport default CustomerInfo;\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n  getDefaultCustomers,\r\n  clearFilterCustomers,\r\n  setCustomer,\r\n  filterCustomers,\r\n  removeCustomer,\r\n} from '../../actions/customer';\r\nimport { getApplicants } from '../../actions/applicant';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  autocomplete: {\r\n    maxWidth: 300,\r\n    marginBottom: 15,\r\n  },\r\n}));\r\n\r\nconst CustomerSelect = ({\r\n  customers,\r\n  isLoading,\r\n  getDefaultCustomers,\r\n  clearFilterCustomers,\r\n  setCustomer,\r\n  filterCustomers,\r\n  removeCustomer,\r\n  getApplicants,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const onChange = (e, value) => {\r\n    setInputValue((prevState) => {\r\n      // Сбрасываем фильтр, если длина текста в инпуте опять меньше 3\r\n      if (\r\n        (prevState && prevState.length >= 3 && value.length < 3) ||\r\n        value.length < 3\r\n      ) {\r\n        clearFilterCustomers();\r\n      } else if (value.length >= 3) {\r\n        // Если длина инпута больше 3, делаем фильтр\r\n        filterCustomers(value);\r\n      }\r\n      setInputValue(value);\r\n    });\r\n  };\r\n\r\n  const changeCustomer = (e, customer) => {\r\n    setSelected(customer);\r\n\r\n    if (customer) {\r\n      setCustomer(customer.id);\r\n      getApplicants(customer.id);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!selected) {\r\n      removeCustomer();\r\n    }\r\n  }, [selected, removeCustomer]);\r\n\r\n  useEffect(() => {\r\n    getDefaultCustomers();\r\n  }, [getDefaultCustomers]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      className={classes.autocomplete}\r\n      value={selected}\r\n      loading={isLoading}\r\n      onChange={changeCustomer}\r\n      options={customers}\r\n      getOptionLabel={(customer) => customer.label}\r\n      getOptionSelected={(customer) => customer.label === selected.label}\r\n      inputValue={inputValue}\r\n      onInputChange={onChange}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Customer Search / Selection\"\r\n          margin=\"normal\"\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  customers: state.customer.customers,\r\n  isLoading: state.customer.customersIsLoading,\r\n});\r\n\r\nCustomerSelect.propTypes = {\r\n  customers: PropTypes.array,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  getDefaultCustomers: PropTypes.func.isRequired,\r\n  clearFilterCustomers: PropTypes.func.isRequired,\r\n  setCustomer: PropTypes.func.isRequired,\r\n  filterCustomers: PropTypes.func.isRequired,\r\n  removeCustomer: PropTypes.func.isRequired,\r\n  getApplicants: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getDefaultCustomers,\r\n  clearFilterCustomers,\r\n  setCustomer,\r\n  filterCustomers,\r\n  removeCustomer,\r\n  getApplicants,\r\n})(CustomerSelect);\r\n","import axios from 'axios';\r\nimport {\r\n  SET_DEFAULT_CUSTOMERS,\r\n  FILTER_CUSTOMERS,\r\n  CLEAR_CUSTOMER,\r\n  CLEAR_FILTER_CUSTOMERS,\r\n  SET_CUSTOMER,\r\n  CLEAR_APPLICANTS,\r\n  SET_CUSTOMERS_ISLOADING,\r\n} from './types';\r\n\r\nexport const getDefaultCustomers = () => (dispatch) => {\r\n  dispatch({ type: SET_CUSTOMERS_ISLOADING });\r\n\r\n  axios\r\n    .get('https://lexberry.com.ua/api/v1/clients')\r\n    .then((res) => {\r\n      // Если элементов нет, приходит res.data.message\r\n      // с сообщением что нет элементов. Поэтому делаем проверку что пришли items\r\n      if (res.data.items) {\r\n        dispatch({\r\n          type: SET_DEFAULT_CUSTOMERS,\r\n          payload: res.data.items,\r\n        });\r\n      }\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const filterCustomers = (searchName) => (dispatch) => {\r\n  dispatch({ type: SET_CUSTOMERS_ISLOADING });\r\n\r\n  axios\r\n    .get(`https://lexberry.com.ua/api/v1/clients`, {\r\n      params: { 'search[name]': searchName },\r\n    })\r\n    .then((res) => {\r\n      if (res.data.items) {\r\n        dispatch({\r\n          type: FILTER_CUSTOMERS,\r\n          payload: res.data.items,\r\n        });\r\n      }\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const clearFilterCustomers = () => (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_FILTER_CUSTOMERS,\r\n  });\r\n};\r\n\r\nexport const setCustomer = (id) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_CUSTOMER,\r\n    payload: id,\r\n  });\r\n};\r\n\r\nexport const removeCustomer = () => (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_CUSTOMER,\r\n  });\r\n\r\n  dispatch({\r\n    type: CLEAR_APPLICANTS,\r\n  });\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport SaveApplication from '../common/SaveApplication';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CustomerInfo from './CustomerInfo';\r\nimport CustomerSelect from './CustomerSelect';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    marginBottom: '25px',\r\n    padding: '20px 25px',\r\n  },\r\n}));\r\n\r\nconst CustomerPanel = ({ customer }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root} elevation={0}>\r\n      <Typography variant=\"h5\">Клієнт</Typography>\r\n      <CustomerSelect />\r\n      {customer && <CustomerInfo customer={customer} />}\r\n      <SaveApplication />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  customer: state.customer.customer,\r\n});\r\n\r\nCustomerPanel.propTypes = {\r\n  customer: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    contactPerson: PropTypes.string,\r\n    phone: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(CustomerPanel);\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport JSONPretty from 'react-json-pretty';\r\n\r\nconst AppllicationInfo = ({ application }) => {\r\n  return application && <JSONPretty data={application} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  application: state.application,\r\n});\r\n\r\nAppllicationInfo.propTypes = {\r\n  application: PropTypes.shape({\r\n    clientId: PropTypes.string,\r\n    applicantsIds: PropTypes.arrayOf(PropTypes.string),\r\n    newApplicants: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        edrpou: PropTypes.string,\r\n        name: PropTypes.string,\r\n        address: PropTypes.shape({\r\n          country: PropTypes.string,\r\n          address: PropTypes.string,\r\n        }),\r\n        originalName: PropTypes.string,\r\n        originalAddress: PropTypes.string,\r\n        id: PropTypes.string,\r\n        personType: PropTypes.string,\r\n      })\r\n    ),\r\n  }),\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(AppllicationInfo);\r\n","import { Provider } from 'react-redux';\nimport store from './store';\nimport ApplicantsPanel from './components/applicants/ApplicantsPanel';\nimport CustomerPanel from './components/customer/CustomerPanel';\nimport ApplicationInfo from './components/application-info/ApplicationInfo';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <CustomerPanel />\n      <ApplicantsPanel />\n      <ApplicationInfo />\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport './index.css';\nimport App from './App';\n\nconst authToken =\n  'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE2MDc0NjEyMDMsImV4cCI6MTYxMDA1MzIwMywicm9sZXMiOlsiUk9MRV9BRE1JTiJdLCJ1c2VybmFtZSI6ImJ5Lmhhc2tlbGwifQ.F_0yZmAbIbPuonnXiKdxI9ne77y3CCFmoe-Wygp3wIgXShDoO64cnnTBsVQG6u6VUvZt1LrueXhUnbOmVKnbUTckKKkNcQWl6iHVO-9RgP2133SOzWcSmVDpf0BC_K0lczF0DaAmp1gHii-Ct50nORpSONSbWNnjkfhBIPbyLVDR2sKuGKyMGG-6Qy0JRDTFnt5AVO_z5HEpCYSrQdhwd_wl7gcD9-vH7_aQib9dq6htbDdqdFw1NXk84B_YTfa2szSFyMDuQkaTgXZwoOOouxEHy9JlJgkKgxK5W-f84cNFkFrYxUhxaNROgPFY8Cs9pB54NcVaSceQc2vF2lgtFb3VyC-ra3xTNtrNmzGPpikftkeU8lnojP8ifEsdeYWjgJGUa7HsR-VMq2fN9otGd0PqpXLpXPasBXEvub7tRyqLziGUG_h4SdgIOu0aGe3sItigzF3fnaCc-Vv8B1wM_qt05ahCgdMuMD7X2dW0eAFuO8zKZszz7owiD5S92QiJkI2sGUG5YzPTOPjch-Qoax--aM1QE8XFDvkDYCruARDTBxcqNp6QAdEANr_toscUpcwTM5-hNfSTGaWvF0dkJaek2PCCszOWAyz6TiLy9lGXVkFEGn-qeR9V0ecdHNx9F_6YNqgWAIOlMNCsYiNp77J6ggmLjJZfTYDh6BAwFNI';\n\naxios.defaults.headers.common['Authorization'] = authToken;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}